version: '3'
services:
  fasp-data-connect:
    build: ./data-connect-trino/ci/impl/
    image: data-connect-trino
    ports:
      - 8089:8089
    environment:
      - SPRING_PROFILES_ACTIVE=no-auth
      - SPRING_DATASOURCE_URL=jdbc:postgresql://10.5.0.2:5432/dataconnecttrino
      - TRINO_DATASOURCE_URL=http://10.5.0.4:8080
      - SPRING_SECURITY_USER_NAME=user
      - SPRING_SECURITY_USER_PASSWORD=user
    depends_on:
      - "fasp-trino"
      - "fasp-postgres"
      - "psql-client"
    expose:
      - "8089"
    networks:
      custom_net:
        ipv4_address: 10.5.0.5

  fasp-trino:
    image: trinodb/trino
    ports:
      - 8080:8080
    depends_on:
      - "fasp-postgres"
    volumes:
      - ./config/config.properties:/etc/trino/config.properties
      - ./config/opa.properties:/etc/trino/opa.properties
      - ./config/password-authenticator.properties:/etc/trino/password-authenticator.properties
      - ./config/password.db:/etc/trino/password.db
    networks:
      custom_net:
        ipv4_address: 10.5.0.4

  psql-client:
    build: ./postgres-psql
    depends_on:
      fasp-postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=10.5.0.2
    networks:
      custom_net:
        ipv4_address: 10.5.0.3
    
  fasp-postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      custom_net:
        ipv4_address: 10.5.0.2

  # sqlite3:
  #   image: nouchka/sqlite3:latest
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - 5050:5050
  #   networks:
  #     custom_net:
  #       ipv4_address: 10.5.0.6

  superset:
    build: ./superset
    ports:
      - "8088:8088"
    expose:
      - "8088"
    volumes:
      - ./superset-data:/app/superset_home
    environment:
      - SUPERSET_SECRET_KEY=crystal
    networks:
      custom_net:
        ipv4_address: 10.5.0.6
  
  # https://aws.plainenglish.io/build-your-own-data-lake-on-your-infrastructure-c5015658b237
  minio:
    restart: always
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: 'minio_user'
      MINIO_ROOT_PASSWORD: 'minio_password'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    volumes:
      - $PWD/volumes/minio:/data
    command: minio server /data
    networks:
      custom_net:
       ipv4_address: 10.5.0.10

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:10.5.8
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=metastore_db
    networks:
      custom_net:
       ipv4_address: 10.5.0.11

  hive-metastore:
    container_name: hive-metastore
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - 9083:9083 # Metastore Thrift
    volumes:
      - $PWD/minio_hive/conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      - METASTORE_DB_HOSTNAME=mariadb
    depends_on:
      - mariadb
    networks:
      custom_net:
       ipv4_address: 10.5.0.12

  # OPEN POLICY AGENT
  opa:
    image: openpolicyagent/opa:latest
    container_name: opa
    ports:
      - 8181:8181
    command: 
      - run 
      - --server
      - /policies
      - --log-level 
      - debug
    volumes:
      - ./policies/trino.rego:/policies/trino.rego
    networks:
      custom_net:
       ipv4_address: 10.5.0.13

  # OPEN TELEMETRY
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 16686:16686
      - 4317:4317
    expose:
      - "16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      custom_net:
       ipv4_address: 10.5.0.14

  proxy:
    image: nginx:1.19.10-alpine
    ports:
      - 80:80
      - 443:443
    expose:
      - "80"
    volumes:
      - ./proxy/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/certs:/etc/nginx/certs
    networks:
      custom_net:
       ipv4_address: 10.5.0.15

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

